// generateComments.js
const fs = require("fs");
const { faker } = require("@faker-js/faker");

const bugs = require("./bugs.json");
const teams = require("./teams.json");
const users = require("./users.json");

// ðŸ”¹ Expanded pool of sample comments (~200)
const sampleComments = [
  "Can you reproduce this on staging?",
  "Logs show multiple errors around 2 AM.",
  "UI breaks in Safari browser.",
  "API request takes 5s instead of 500ms.",
  "Authentication flow fails with SSO.",
  "Form validation missing for email field.",
  "Dropdown menu overlaps footer.",
  "Bug only appears in dark mode.",
  "Crash reported on iOS 16 devices.",
  "Push notifications delayed by 30 minutes.",
  "Database query timing out after 30s.",
  "Index missing on orders table.",
  "Caching layer not invalidated properly.",
  "Payment gateway returns 500 error.",
  "JWT token expires too early.",
  "Race condition in background jobs.",
  "Memory leak in analytics service.",
  "Docker container stuck in crash loop.",
  "Pipeline failing on integration tests.",
  "QA reported regression in signup flow.",
  "Duplicate entries in user table.",
  "Search results not sorted correctly.",
  "GraphQL query returns null fields.",
  "Monitoring alert didnâ€™t trigger.",
  "Broken link on dashboard sidebar.",
  "File upload fails intermittently.",
  "Attachment preview not rendering.",
  "Exported CSV missing headers.",
  "Latency spike observed in EU region.",
  "Missing translation in French locale.",
  "Notifications not dismissed after click.",
  "Password reset email not sent.",
  "Data mismatch between UI and DB.",
  "Admin role cannot access settings.",
  "CSRF token missing in requests.",
  "XSS possible in comments field.",
  "UI animation freezes on hover.",
  "Scrollbar visible unnecessarily.",
  "Alignment issue on mobile layout.",
  "Build works locally but fails in CI.",
  "Feature flag not toggling correctly.",
  "Email template renders broken HTML.",
  "Incorrect error message displayed.",
  "Crash when uploading >100MB file.",
  "Session not expiring after logout.",
  "API docs outdated for v2 endpoints.",
  "Config missing for staging env.",
  "SSL certificate expired.",
  "Timeout connecting to Redis.",
  "Duplicate notifications sent.",
  "Sorting by date not working.",
  "User avatar not updating.",
  "Tooltip flickers on hover.",
  "Dropdown not keyboard accessible.",
  "Aria-label missing for button.",
  "Accessibility score dropped.",
  "Broken pagination on reports page.",
  "Infinite spinner after save.",
  "Unexpected logout after refresh.",
  "Websocket disconnects frequently.",
  "Error boundary not catching crash.",
  "Mobile app freezes after update.",
  "Android build crashing on startup.",
  "Gesture navigation broken.",
  "Offline mode not loading cache.",
  "Session persistence broken.",
  "OAuth redirect failing.",
  "Third-party API limit exceeded.",
  "Webhook retries not working.",
  "UI theme not applied after reload.",
  "Bug appears only in incognito mode.",
  "Dropdown stays open after click.",
  "Push token not refreshed.",
  "Background sync never finishes.",
  "Data corruption after migration.",
  "Old logs not rotated properly.",
  "Error rate spiked in last release.",
  "Thread deadlock detected.",
  "Critical alert ignored by PagerDuty.",
  "Wrong timezone in reports.",
  "Decimal rounding wrong in totals.",
  "Currency conversion incorrect.",
  "Attachments not downloadable.",
  "Image thumbnail broken.",
  "Broken link in email footer.",
  "Scroll position not retained.",
  "Tabs not switching correctly.",
  "Button hover style inconsistent.",
  "Color contrast fails WCAG.",
  "Form allows duplicate submissions.",
  "Backend rejects valid request.",
  "Audit log missing entries.",
  "Permissions not applied correctly.",
  "QA flagged security hole.",
  "Crash dump generated in logs.",
  "Stack trace leaked to user.",
  "Loading spinner stuck forever.",
  "User can bypass validation.",
  "Bug appears after hotfix deployed.",
  "Unexpected error with new library.",
  "Background job failed silently.",
  "Redis cache not cleared.",
  "Feature rollout 50% not applied.",
  "Notification banner overlaps header.",
  "Navbar not sticky on scroll.",
  "Logout redirect broken.",
  "Error toast not dismissible.",
  "Empty state not styled.",
  "Fallback image missing.",
  "Push retry logic missing.",
  "Config file overwritten.",
  "Stale data after refresh.",
  "Modal not centered.",
  "Dropdown clipped by viewport.",
  "Zoom level breaks layout.",
  "User mention not highlighted.",
  "Markdown not rendering properly.",
  "Search indexing delayed.",
  "Reports export truncated.",
  "2FA prompt not shown.",
  "Invalid token error not user-friendly.",
  "Bug tracker integration broken.",
  "Slack webhook not triggered.",
  "Email queue stuck.",
  "Worker pool exhausted.",
  "Too many DB connections open.",
  "Memory usage spiked.",
  "High CPU usage under load.",
  "Network retries too aggressive.",
  "Retry logic never backoff.",
  "Metrics missing for API.",
  "Response headers incorrect.",
  "Content-Type wrong in response.",
  "Logs missing request IDs.",
  "Server time drift detected.",
  "Config mismatch across envs.",
  "Session cookie insecure.",
  "Headers not set properly.",
  "Analytics data duplicated.",
  "Event not fired in frontend.",
  "Click tracking not working.",
  "Scroll tracking broken.",
  "AB test not splitting evenly.",
  "Experiment flag ignored.",
  "User sees wrong variant.",
  "Session storage overflow.",
  "LocalStorage corrupted.",
  "Browser console spammed with warnings.",
  "Deprecated API still in use.",
  "Test coverage dropped.",
  "Unit tests failing intermittently.",
  "Integration tests flaky.",
  "Build cache not used.",
  "Deploy stuck on migration.",
  "Rollback not applied.",
  "Hotfix skipped tests.",
  "Release notes missing.",
  "Tag not pushed to repo.",
  "Version mismatch in dependencies.",
  "Peer dependency conflict.",
  "Broken import path.",
  "Code style violations.",
  "Lint errors ignored.",
  "Prettier config missing.",
  "Type mismatch in TS.",
  "Schema drift detected.",
  "DB migration failed.",
  "Table missing index.",
  "Foreign key constraint failed.",
  "Default value incorrect.",
  "Null values inserted unexpectedly.",
  "Trigger not firing.",
  "Stored procedure bug.",
  "Query plan inefficient.",
  "Deadlock in transaction.",
  "Temp table not dropped.",
  "Shard imbalance detected.",
  "Replica lag >10s.",
  "Backup job failed.",
  "Restore incomplete.",
  "Data loss after restore.",
  "Cluster node down.",
  "Leader election failed.",
  "Config reload not applied.",
  "Service discovery broken.",
  "Load balancer misrouted traffic.",
  "Health check not reliable.",
  "Pod stuck in pending state.",
  "K8s deployment rollback failed.",
  "Helm chart outdated.",
  "Ingress rule misconfigured.",
  "Autoscaler not scaling down.",
  "Resource limits exceeded.",
  "OOMKilled events in cluster.",
  "Pod eviction storm.",
  "Node drained incorrectly.",
  "Disk pressure detected.",
  "Filesystem full.",
  "Logs not shipped to ELK.",
  "Metrics not scraped by Prometheus.",
  "Alert rules misconfigured.",
  "Dashboard widgets broken.",
  "Service map incomplete.",
  "Tracing not sampling.",
  "Jaeger span missing.",
  "OpenTelemetry exporter error.",
  "Alert fatigue due to noise."
];

// ðŸ”¹ Expanded replies (~200)
const sampleReplies = [
  "Yes, reproduced this issue on staging.",
  "Confirmed in logs, same error seen.",
  "Happens only in production, not local.",
  "Fix deployed to hotfix branch.",
  "Waiting for QA to verify.",
  "I canâ€™t reproduce this locally.",
  "Checked, it works after cache clear.",
  "Confirmed bug on Android 12.",
  "Not happening on iOS for me.",
  "Seems related to database load.",
  "Added missing index, retry now.",
  "Increased timeout fixed the issue.",
  "Restarting container solved it.",
  "Pipeline rerun passed successfully.",
  "Regression fixed in latest build.",
  "Staging environment stable again.",
  "Hotfix deployed to production.",
  "Marked as duplicate of bug #45.",
  "Created follow-up ticket for logs.",
  "Closing this since fix verified.",
  "Canâ€™t replicate after last commit.",
  "Still broken on staging.",
  "Issue happens only with large files.",
  "Testing rollback now.",
  "Fix pushed to branch `bugfix/api`.",
  "Will test in next release cycle.",
  "Verified issue resolved in EU region.",
  "Added monitoring for this endpoint.",
  "Related to config mismatch.",
  "Thanks, assigned to infra team.",
  "Root cause identified.",
  "Deployed patch to staging.",
  "QA signed off on fix.",
  "Issue reopened after regression.",
  "Confirmed after fresh install.",
  "Works after clearing session.",
  "Likely race condition.",
  "Added retry logic.",
  "Fix pending review.",
  "Tests added to cover scenario.",
  "Still flaky in CI pipeline.",
  "Not reproducible anymore.",
  "Logs show different error now.",
  "Fixed by upgrading dependency.",
  "Checked with vendor API.",
  "Flag enabled, working fine.",
  "Deploy pipeline green now.",
  "Cache warmed up, issue gone.",
  "DNS propagation delay caused it.",
  "Monitoring shows stable metrics.",
  "Verified by multiple testers.",
  "Deployed to 10% users, no issue.",
  "Scaling resolved the latency.",
  "Fixed in v2.3.1 release.",
  "Workaround documented.",
  "Closing after QA signoff.",
  "Tag pushed to repo.",
  "Release notes updated.",
  "Integration tests stable now.",
  "Memory leak patch merged.",
  "Cluster balanced again.",
  "Shard rebalancing fixed issue.",
  "Backup job verified.",
  "Restore tested successfully.",
  "Failover worked fine.",
  "Leader election stable.",
  "Pods scaled properly.",
  "Alert firing correctly.",
  "Dashboard widgets fixed.",
  "Prometheus scraping metrics.",
  "Tracing integrated correctly.",
  "Span IDs now consistent.",
  "CPU usage normalized.",
  "OOMKilled resolved.",
  "Eviction storm avoided.",
  "Node back online.",
  "Filesystem cleanup done.",
  "Logs shipped to ELK.",
  "Alerts tuned to reduce noise.",
  "PagerDuty alert triggered.",
  "Follow-up issue created.",
  "Thanks for quick fix!",
  "QA approved final build.",
  "User confirmed resolution.",
  "Marking as resolved.",
  "Pending deployment window.",
  "Confirmed on Windows too.",
  "Cross-browser issue verified.",
  "Cache headers corrected.",
  "SSL renewed successfully.",
  "Staging config updated.",
  "Downtime within SLA.",
  "Added to release checklist.",
  "Automation covers this now.",
  "Retry count increased.",
  "Logs attached in ticket.",
  "Diagnostic info added.",
  "Escalating to infra team.",
  "Patch validated.",
  "Commit hash referenced.",
  "Linking duplicate issues.",
  "Testing rollback plan.",
  "Upgrade rolled out.",
  "DB migration successful.",
  "Schema updated.",
  "Test data loaded.",
  "Monitoring added.",
  "Validation fixed.",
  "Edge case handled.",
  "Timeout extended.",
  "Retries tuned.",
  "Feature flag checked.",
  "Permission fixed.",
  "Access restored.",
  "Crash dump analyzed.",
  "Stacktrace cleaned.",
  "Critical bug patched.",
  "Workaround applied.",
  "Will monitor logs.",
  "Deploy verified.",
  "Tests updated.",
  "CI/CD stable.",
  "Infra team ack.",
  "Closing as fixed.",
  "Status updated.",
  "Marking duplicate.",
  "Merged to main.",
  "Hotfix merged.",
  "Release candidate ok.",
  "Version bump done.",
  "Changelog updated.",
  "Doc updated.",
  "Helpdesk notified.",
  "Ops team informed.",
  "Users notified.",
  "Status page updated.",
  "Incident closed.",
  "Root cause RCA.",
  "Follow-up action item.",
  "Blameless postmortem scheduled."
];

// Utility
function pickRandom(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

function generateComments() {
  const comments = [];

  for (const bug of bugs) {
    // find team object straight from teams.json by matching ID string
    const team = teams.find((t) => String(t._id) === String(bug.teamId));
    if (!team) {
      // if team missing, skip and log once (avoid flooding)
      // (You can remove the comment below after first run.)
      // console.warn(`Skipping bug ${bug._id}: team ${bug.teamId} not found`);
      continue;
    }

    // team.members expected to be array of { user: <userId>, role: ... }
    const teamMembers = (team.members || []).map((m) => m.user).filter(Boolean);
    if (teamMembers.length === 0) {
      // no members -> skip
      continue;
    }

    // Top-level comments (5â€“7 per bug)
    const topLevelCount = faker.number.int({ min: 5, max: 7 });
    const topLevelComments = [];

    for (let i = 0; i < topLevelCount; i++) {
      const createdBy = pickRandom(teamMembers);
      const commentId = faker.database.mongodbObjectId();

      const comment = {
        _id: commentId,
        text: pickRandom(sampleComments),
        bugId: bug._id,
        teamId: bug.teamId,
        createdBy,
        parentComment: null,
        createdAt: faker.date.recent({ days: 30 }).toISOString(),
        updatedAt: new Date().toISOString(),
      };

      topLevelComments.push(comment);
      comments.push(comment);
    }

    // Replies (1â€“3 per top-level comment)
    for (const parent of topLevelComments) {
      const replyCount = faker.number.int({ min: 1, max: 3 });
      for (let i = 0; i < replyCount; i++) {
        const createdBy = pickRandom(teamMembers);

        const reply = {
          _id: faker.database.mongodbObjectId(),
          text: pickRandom(sampleReplies),
          bugId: bug._id,
          teamId: bug.teamId,
          createdBy,
          parentComment: parent._id,
          createdAt: faker.date.recent({ days: 30 }).toISOString(),
          updatedAt: new Date().toISOString(),
        };

        comments.push(reply);
      }
    }
  }

  return comments;
}

// Generate and write file
const comments = generateComments();
fs.writeFileSync("comments.json", JSON.stringify(comments, null, 2));
console.log(`âœ… Generated ${comments.length} comments into comments.json`);
